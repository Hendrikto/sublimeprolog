{ "name": "Prolog",
  "scopeName": "source.prolog", 
  "fileTypes": ["pl"], 
  "patterns": [
  	{ "name": "comment.line.percent-sign.prolog",
  	  "match": "%.*"
  	},
  	{ "name": "meta.clause.prolog",
  	  "begin": "^\\s*([a-zA-Z][a-zA-Z0-9_]*\\((?'parameters'(?'number'\\d+)|(?'underscore'_)|(?'list'\\[(\\g'parameters'(,\\g'parameters')*?(\\|\\g'parameters')?)??\\])|(?'atom'[a-z][a-zA-Z0-9_]*)|(?'variable'[A-Z][a-zA-Z0-9_]*)|(?'compound'\\g'atom'\\(\\g'parameters'(,\\g'parameters')*?\\)))(,\\g'parameters')*\\))[\\s^\\n]*(?'hyphendash':-)",
  	  "beginCaptures": {
  	      "1": { "name": "entity.name.function.head.prolog" },
  	      "hyphendash": { "name": "keyword.control.hyphendash.prolog"},
  	      "underscore": { "name": "keyword.control.anonymous.prolog"}
  	  },
  	  "patterns": [
	  	{ "include": "$self" },
	  	{  "name": "meta.clause.body.prolog",
	  	   "match": "."
	  	}
  	  ],
  	  "end": ".*(\\.)",
  	  "endCaptures": {
  	      "1": { "name": "keyword.control.clauseend.prolog" }
  	  }
  	},
  	{  "name": "entity.name.function.fact.prolog",
  	   "match": "\\s*[a-zA-Z][a-zA-Z0-9_]*\\(.*?\\)[\\s^\\n]*\\."
  	},
    {  "name": "keyword.control.if.prolog",
       "match": "->|;"
    },
    {  "name": "keyword.control.cut.prolog",
       "match": "!"
    },
    {  "name": "keyword.operator.prolog",
       "match": "(\\s(is)\\s)|((?<!\\w)_)|==|=|\\\\\\+|>|<|\\+|\\*|\\-"
    }
  ],
  "uuid": "df89928b-6612-475a-b414-f319d9b98664"
}
